AudioClipLoadType的踩坑记录
因为在做Unity核心实践小项目的时候加载背景音乐发现非常卡顿, 即使是异步也是会造成将近1秒的明显卡顿故而有了这个记录.

Decompress On Load 默认选项. 是在音频文件加载后将立即解压缩, 此种解压缩是一次性解压整个音频文件到内存所以只适合小音频. 选择此项可以避免动态解压缩产生的消耗. 此选项对于默认压缩选项 Vorbis 编码来说, 解压缩会占用压缩状态10倍的内存空间. 对于稍大的音频文件来说, 这个解压缩会造成非常明显的卡顿. 即使是异步加载也无法避免, 因为卡顿并不是因为加载, 而是因为解压缩.

Compressed In Memory 是以压缩状态直接载入内存, 在播放时解压缩. 这种就是上面提到的动态解压缩了, 因为只解压即将播放的一小段所以不会造成明显的卡顿, 但会在播放中有轻微的性能开销, 这种就比较适合较大的音频文件. 

Streaming 即时解码声音。此方法使用最少量的内存来缓冲从磁盘中逐渐读取并即时解码的压缩数据。在内存紧张的时候使用
参考资料: https://docs.unity3d.com/cn/current/Manual/class-AudioClip.html


Animator的踩坑记录
Trigger在UI界面中连续点两次会取消Trigeer, 但代码中并不会.
不走某个转换的原因有三种, 被禁止, 优先级低 和 容易被忽略的转换时间点晚于另外一条线


Act连招做法
状态机中连接连招状态并将转换条件的退出时间指定在动作切换点上. 动作切换点就是必要动画完成的一瞬间.
这里有两种做法: 
1. Trigger转换方法, 需要注意最后一段攻击状态中不再允许设置Trigger避免退出后再次攻击
2. Int转换方法, 此种方法需要根据当前攻击状态设置Int的值进行转换, 与Trigger相反,此种方法通常情况下不需要处理最后一段攻击状态.

Act连招进阶之真炎幸魂
真炎幸魂对于同一个动画不同阶段按下按键有不同的反馈, 转换条件不再单一
如果使用Trigger制作就需要在AnimatorController中额外添加一个变量标志走向哪一个Translation.
如果使用Int制作则可以免除AnimatorController的额外标志位, 以int的值作为判断条件.
真炎幸魂还有一个特征就是闪避后Idle前按攻击键可以续上普攻连段.
对于这种情况, 就需要在Animtor中记录当前的连段数以在按下攻击时直接进入下一段的攻击动画.
之后可以选择Trigger也可以选择Int, 但既然已经有Int了完全可以使用这个Int作为条件

连招总结
Trigger : 仅适合固定连招(同起始同结束). 代码逻辑简单, 需求复杂后AnimatorController所需变量也会增加.
Int: 通用百搭. 代码逻辑复杂. AnimatorController占用变量永远只有一个.


unity 中音频无缝衔接不能用MP3格式
https://www.douban.com/note/762469539/?_i=5959549CaO0bFc